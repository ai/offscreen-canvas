{
  "name": "offscreen-canvas",
  "version": "0.1.0",
  "description": "Polyfill for OffscreenCanvas to move Three.js/WebGL/2D canvas to Web Worker",
  "keywords": [
    "offscreen canvas",
    "canvas",
    "webgl",
    "polyfill",
    "three.js"
  ],
  "scripts": {
    "spell": "yaspeller *.md",
    "lint": "eslint *.js",
    "test": "yarn lint && size-limit && yarn spell",
    "start": "parcel serve --cache-dir test/.cache -d test/dist test/index.html --open"
  },
  "author": "Andrey Sitnik <andrey@sitnik.ru>",
  "license": "MIT",
  "repository": "ai/offscreen-canvas",
  "devDependencies": {
    "@logux/eslint-config": "^28.0.0",
    "clean-publish": "^1.1.0",
    "eslint": "^5.15.3",
    "eslint-config-standard": "^12.0.0",
    "eslint-plugin-es5": "^1.3.1",
    "eslint-plugin-import": "^2.16.0",
    "eslint-plugin-import-helpers": "^0.1.4",
    "eslint-plugin-jest": "^22.3.2",
    "eslint-plugin-node": "^8.0.1",
    "eslint-plugin-prefer-let": "^1.0.1",
    "eslint-plugin-promise": "^4.0.1",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-standard": "^4.0.0",
    "husky": "^1.3.1",
    "lint-staged": "^8.1.5",
    "parcel-bundler": "^1.12.3",
    "size-limit": "^0.21.1",
    "yaspeller": "^5.0.1"
  },
  "size-limit": [
    {
      "path": [
        "./create-worker.js",
        "./inside-worker.js"
      ],
      "limit": "376 B"
    }
  ],
  "eslintConfig": {
    "extends": "@logux/eslint-config/browser"
  },
  "lint-staged": {
    "*.md": "yaspeller",
    "*.js": "eslint"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "yaspeller": {
    "lang": "en",
    "ignoreCapitalization": true,
    "dictionary": [
      "Versioning",
      "polyfill",
      "js",
      "WebGL or",
      "2D",
      "JS",
      "webpack",
      "bundler",
      "diff",
      "ImageBitmapLoader",
      "ImageLoader",
      "workerUrl",
      "querySelector",
      "addEventListener",
      "createWorker",
      "insideWorker",
      "isWorker",
      "src",
      "rel",
      "OffscreenCanvas",
      "WebGL"
    ]
  }
}
